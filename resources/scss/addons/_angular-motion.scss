/**
 * angular-motion
 * @version v0.4.2 - 2015-09-23
 * @link https://github.com/mgcrea/angular-motion
 * @author Olivier Louvignes <olivier@mg-crea.com> (https://github.com/mgcrea)
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */

.am-collapse {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(ease);
  overflow: hidden;
  opacity: 1;
}
.am-collapse.am-collapse-add,
.am-collapse.ng-hide-remove,
.am-collapse.ng-move {
  @include animation-name(expand);
}
.am-collapse.am-collapse-remove,
.am-collapse.ng-hide {
  @include animation-name(collapse);
}
.am-collapse.ng-enter {
  visibility: hidden;
  @include animation-name(expand);
  @include animation-play-state(paused);
}
.am-collapse.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-collapse.ng-leave {
  @include animation-name(collapse);
  @include animation-play-state(paused);
}
.am-collapse.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
@include keyframes(expand) {
  from {
    max-height: 0px;
  }
  to {
    max-height: 500px;
  }
}
@include keyframes(collapse) {
  from {
    max-height: 500px;
  }
  to {
    max-height: 0px;
  }
}

.panel-collapse.am-collapse.in-remove {
  @include animation-name(collapse);
  display: block;
}
.panel-collapse.am-collapse.in-add {
  @include animation-name(expand);
}

.am-fade {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(ease);
  opacity: 1;
}
.am-fade.am-fade-add,
.am-fade.ng-hide-remove,
.am-fade.ng-move {
  @include animation-name(fadeIn);
  @include animation-name(fadeIn);
}
.am-fade.am-fade-remove,
.am-fade.ng-hide {
  @include animation-name(fadeOut);
}
.am-fade.ng-enter {
  visibility: hidden;
  @include animation-name(fadeIn);
  @include animation-play-state(paused);
}
.am-fade.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-fade.ng-leave {
  @include animation-name(fadeOut);
  @include animation-play-state(paused);
}
.am-fade.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
@include keyframes(fadeIn) {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@include keyframes(fadeOut) {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.tab-pane.am-fade.active-remove {
  display: none !important;
}
.tab-pane.am-fade.active-add {
  @include animation-name(fadeIn);
}

.modal-backdrop.am-fade,
.aside-backdrop.am-fade {
  background: rgba(0, 0, 0, 0.48);
  @include animation-duration(0.45s);
}
.modal-backdrop.am-fade.ng-leave,
.aside-backdrop.am-fade.ng-leave {
  @include animation-delay(0.2s);
}

.am-fade-and-scale {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(am-timing-function-slide);
}
.am-fade-and-scale.ng-enter,
.am-fade-and-scale.am-fade-and-scale-add,
.am-fade-and-scale.ng-hide-remove,
.am-fade-and-scale.ng-move {
  @include animation-name(fadeAndScaleIn);
}
.am-fade-and-scale.ng-leave,
.am-fade-and-scale.am-fade-and-scale-remove,
.am-fade-and-scale.ng-hide {
  @include animation-name(fadeAndScaleOut);
}
.am-fade-and-scale.ng-enter {
  visibility: hidden;
  @include animation-name(fadeAndScaleIn);
  @include animation-play-state(paused);
}
.am-fade-and-scale.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-fade-and-scale.ng-leave {
  @include animation-name(fadeAndScaleOut);
  @include animation-play-state(paused);
}
.am-fade-and-scale.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
@include keyframes(fadeAndScaleIn) {
  from {
    opacity: 0;
    @include transform(scale(0.7));
  }
  to {
    opacity: 1;
  }
}
@include keyframes(fadeAndScaleOut) {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    @include transform(scale(0.7));
  }
}

.am-fade-and-slide-top {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(am-timing-function-slide);
}
.am-fade-and-slide-top.am-fade-and-slide-top-add,
.am-fade-and-slide-top.ng-hide-remove,
.am-fade-and-slide-top.ng-move {
  @include animation-name(fadeAndSlideFromTop);
}
.am-fade-and-slide-top.am-fade-and-slide-top-remove,
.am-fade-and-slide-top.ng-hide {
  @include animation-name(fadeAndSlideToTop);
}
.am-fade-and-slide-top.ng-enter {
  visibility: hidden;
  @include animation-name(fadeAndSlideFromTop);
  @include animation-play-state(paused);
}
.am-fade-and-slide-top.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-fade-and-slide-top.ng-leave {
  @include animation-name(fadeAndSlideToTop);
  @include animation-play-state(paused);
}
.am-fade-and-slide-top.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
.am-fade-and-slide-right {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(am-timing-function-slide);
}
.am-fade-and-slide-right.am-fade-and-slide-right-add,
.am-fade-and-slide-right.ng-hide-remove,
.am-fade-and-slide-right.ng-move {
  @include animation-name(fadeAndSlideFromRight);
}
.am-fade-and-slide-right.am-fade-and-slide-right-remove,
.am-fade-and-slide-right.ng-hide {
  @include animation-name(fadeAndSlideToRight);
}
.am-fade-and-slide-right.ng-enter {
  visibility: hidden;
  @include animation-name(fadeAndSlideFromRight);
  @include animation-play-state(paused);
}
.am-fade-and-slide-right.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-fade-and-slide-right.ng-leave {
  @include animation-name(fadeAndSlideToRight);
  @include animation-play-state(paused);
}
.am-fade-and-slide-right.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
.am-fade-and-slide-bottom {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(am-timing-function-slide);
}
.am-fade-and-slide-bottom.am-fade-and-slide-bottom-add,
.am-fade-and-slide-bottom.ng-hide-remove,
.am-fade-and-slide-bottom.ng-move {
  @include animation-name(fadeAndSlideFromBottom);
}
.am-fade-and-slide-bottom.am-fade-and-slide-bottom-remove,
.am-fade-and-slide-bottom.ng-hide {
  @include animation-name(fadeAndSlideToBottom);
}
.am-fade-and-slide-bottom.ng-enter {
  visibility: hidden;
  @include animation-name(fadeAndSlideFromBottom);
  @include animation-play-state(paused);
}
.am-fade-and-slide-bottom.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-fade-and-slide-bottom.ng-leave {
  @include animation-name(fadeAndSlideToBottom);
  @include animation-play-state(paused);
}
.am-fade-and-slide-bottom.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
.am-fade-and-slide-left {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(am-timing-function-slide);
}
.am-fade-and-slide-left.am-fade-and-slide-left-add,
.am-fade-and-slide-left.ng-hide-remove,
.am-fade-and-slide-left.ng-move {
  @include animation-fill-mode(backwards);
  @include animation-name(fadeAndSlideFromLeft);
}
.am-fade-and-slide-left.am-fade-and-slide-left-remove,
.am-fade-and-slide-left.ng-hide {
  @include animation-name(fadeAndSlideToLeft);
}
.am-fade-and-slide-left.ng-enter {
  visibility: hidden;
  @include animation-name(fadeAndSlideFromLeft);
  @include animation-play-state(paused);
}
.am-fade-and-slide-left.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-fade-and-slide-left.ng-leave {
  @include animation-name(fadeAndSlideToLeft);
  @include animation-play-state(paused);
}
.am-fade-and-slide-left.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
@include keyframes(fadeAndSlideFromTop){
  from {
    opacity: 0;
    @include transform(translateY(-20%));
  }
  to {
    opacity: 1;
  }
}
@include keyframes(fadeAndSlideToTop) {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    @include transform(translateY(-20%));
  }
}
@include keyframes(fadeAndSlideFromRight) {
  from {
    opacity: 0;
    @include transform(translateX(20%));
  }
  to {
    opacity: 1;
  }
}
@include keyframes(fadeAndSlideToRight) {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    @include transform(translateX(20%));
  }
}
@include keyframes(fadeAndSlideFromBottom){
  from {
    opacity: 0;
    @include transform(translateY(20%));
  }
  to {
    opacity: 1;
  }
}
@include keyframes(fadeAndSlideToBottom){
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    @include transform(translateY(20%));
  }
}
@include keyframes(fadeAndSlideFromLeft){
  from {
    opacity: 0;
    @include transform(translateX(-20%));
  }
  to {
    opacity: 1;
  }
}
@include keyframes(fadeAndSlideToLeft){
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    @include transform(translateX(-20%));
  }
}

.am-flip-x {
  @include animation-duration(0.4s);
  @include animation-timing-function(ease);
  @include animation-fill-mode(backwards);
}
.am-flip-x.am-flip-x-add,
.am-flip-x.ng-hide-remove,
.am-flip-x.ng-move {
  @include animation-name(flipInXBounce);
}
.am-flip-x.am-flip-x-remove,
.am-flip-x.ng-hide {
  @include animation-name(flipOutX);
}
.am-flip-x.ng-enter {
  visibility: hidden;
  @include animation-name(flipInXBounce);
  @include animation-play-state(paused);
}
.am-flip-x.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-flip-x.ng-leave {
  @include animation-name(flipOutX);
  @include animation-play-state(paused);
}
.am-flip-x.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
.am-flip-x-linear {
  @include animation-duration(0.4s);
  @include animation-timing-function(ease);
  @include animation-fill-mode(backwards);
}
.am-flip-x-linear.am-flip-x-add,
.am-flip-x-linear.ng-hide-remove,
.am-flip-x-linear.ng-move {
  @include animation-name(flipInX);
}
.am-flip-x-linear.am-flip-x-remove,
.am-flip-x-linear.ng-hide {
  @include animation-name(flipOutX);
}
.am-flip-x-linear.ng-enter {
  visibility: hidden;
  @include animation-name(flipInX);
  @include animation-play-state(paused);
}
.am-flip-x-linear.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-flip-x-linear.ng-leave {
  @include animation-name(flipOutX);
  @include animation-play-state(paused);
}
.am-flip-x-linear.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
@include keyframes(flipInX){
  from {
    opacity: 0;
    @include transform(perspective(400px) rotatioX(90deg));
  }
  to {
    opacity: 1;
    @include transform(perspective(400px) rotateX(0deg));
  }
}
@include keyframes(flipInXBounce) {
  from {
    opacity: 0;
    @include transform(perspective(400px) rotatioX(90deg));
  }
  40% {
    @include transform(perspective(400px) rotateX(-10deg));
  }
  70% {
    @include transform(perspective(400px) rotateX(10deg));
  }
  to {
    opacity: 1;
    @include transform(perspective(400px) rotateX(0deg));
  }
}
@include keyframes(flipOutX) {
  from {
    opacity: 1;
    @include transform(perspective(400px) rotateX(0deg));
  }
  to {
    opacity: 0;
    @include transform(perspective(400px) rotatioX(90deg));
  }
}

.am-slide-top {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(am-timing-function-slide);
}
.am-slide-top.am-slide-top-add,
.am-slide-top.ng-hide-remove,
.am-slide-top.ng-move {
  @include animation-name(slideFromTop);
}
.am-slide-top.am-slide-top-remove,
.am-slide-top.ng-hide {
  @include animation-name(slideToTop);
}
.am-slide-top.ng-enter {
  visibility: hidden;
  @include animation-name(slideFromTop);
  @include animation-play-state(paused);
}
.am-slide-top.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-slide-top.ng-leave {
  @include animation-name(slideToTop);
  @include animation-play-state(paused);
}
.am-slide-top.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
.am-slide-right {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(am-timing-function-slide);
}
.am-slide-right.am-slide-right-add,
.am-slide-right.ng-hide-remove,
.am-slide-right.ng-move {
  @include animation-name(slideFromRight);
}
.am-slide-right.am-slide-right-remove,
.am-slide-right.ng-hide {
  @include animation-name(slideToRight);
}
.am-slide-right.ng-enter {
  visibility: hidden;
  @include animation-name(slideFromRight);
  @include animation-play-state(paused);
}
.am-slide-right.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-slide-right.ng-leave {
  @include animation-name(slideToRight);
  @include animation-play-state(paused);
}
.am-slide-right.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
.am-slide-bottom {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(am-timing-function-slide);
}
.am-slide-bottom.am-slide-bottom-add,
.am-slide-bottom.ng-hide-remove,
.am-slide-bottom.ng-move {
  @include animation-name(slideFromBottom);
}
.am-slide-bottom.am-slide-bottom-remove,
.am-slide-bottom.ng-hide {
  @include animation-name(slideToBottom);
}
.am-slide-bottom.ng-enter {
  visibility: hidden;
  @include animation-name(slideFromBottom);
  @include animation-play-state(paused);
}
.am-slide-bottom.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-slide-bottom.ng-leave {
  @include animation-name(slideToBottom);
  @include animation-play-state(paused);
}
.am-slide-bottom.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}
.am-slide-left {
  @include animation-duration(0.3s);
  @include animation-fill-mode(backwards);
  @include animation-timing-function(am-timing-function-slide);
}
.am-slide-left.am-slide-left-add,
.am-slide-left.ng-hide-remove,
.am-slide-left.ng-move {
  @include animation-name(slideFromLeft);
}
.am-slide-left.am-slide-left-remove,
.am-slide-left.ng-hide {
  @include animation-name(slideToLeft);
}
.am-slide-left.ng-enter {
  visibility: hidden;
  @include animation-name(slideFromLeft);
  @include animation-play-state(paused);
}
.am-slide-left.ng-enter.ng-enter-active {
  visibility: visible;
  @include animation-play-state(running);
}
.am-slide-left.ng-leave {
  @include animation-name(slideToLeft);
  @include animation-play-state(paused);
}
.am-slide-left.ng-leave.ng-leave-active {
  @include animation-play-state(running);
}

@include keyframes(slideFromTop) {
  from {
    @include transform(translateY(-100%));
  }
}
@include keyframes(slideToTop) {
  to {
    @include transform(translateY(-100%));
  }
}

@include keyframes(slideFromRight) {
  from {
    @include transform(translateX(100%));
  }
}
@include keyframes(slideToRight) {
  to {
    @include transform(translateX(100%));
  }
}

@include keyframes(slideFromBottom) {
  from {
    @include transform(translateY(100%));
  }
}
@include keyframes(slideToBottom) {
  to {
    @include transform(translateY(100%));
  }
}

@include keyframes(slideFromLeft) {
  from {
    @include transform(translateX(-100%));
  }
}
@include keyframes(slideToLeft) {
  to {
    @include transform(translateX(-100%));
  }
}

$fade-and-scale-duration: .3s;
$fade-and-scale-timing-function: cubic-bezier(.34,1.61,.7,1);

.am-fade-and-scale-top {
  @include animation-duration($fade-and-scale-duration)
  @include animation-timing-function($fade-and-scale-timing-function);
  @include animation-fill-mode(backwards);
  
  &.top {
    @include transform-origin(center bottom);
  }

  &.bottom {
    @include transform-origin(center top);
  }

  &.am-fade-and-scale-top-add, 
  &.ng-hide-remove, 
  &.ng-move {
    @include animation-name(fadeAndScaleFromTop);
  }
  &.am-fade-and-scale-top-remove, 
  &.ng-hide {
    @include animation-name(fadeAndScaleFromTop);
  }

  &.ng-enter {
    visibility: hidden;
    @include animation-name(fadeAndScaleFromTop);
    @include animation-play-state(paused);
    &.ng-enter-active {
      visibility: visible;
      @include animation-play-state(running);
    }
  }
  &.ng-leave {
    @include animation-name(fadeAndScaleToTop);
    @include animation-play-state(paused);
    &.ng-leave-active {
      @include animation-play-state(running);
    }
  }
}

@include keyframes(fadeAndScaleFromTop) {
  from {
    opacity: 0;
    @include transform( scale(0.2));
  }
  to {
    opacity: 1;
  }
}

@include keyframes(fadeAndScaleToTop) {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    @include transform( scale(0.2));
  }
}

.am-fade-and-scale-bottom {
  @include animation-duration($fade-and-scale-duration)
  @include animation-timing-function($fade-and-scale-timing-function);
  @include animation-fill-mode(backwards);

  &.am-fade-and-scale-bottom-add, 
  &.ng-hide-remove, 
  &.ng-move {
    @include animation-name(fadeAndScaleFromBottom);
  }
  &.am-fade-and-scale-bottom-remove, 
  &.ng-hide {
    @include animation-name(fadeAndScaleFromBottom);
  }

  &.ng-enter {
    visibility: hidden;
    @include animation-name(fadeAndScaleFromBottom);
    @include animation-play-state(paused);
    &.ng-enter-active {
      visibility: visible;
      @include animation-play-state(running);
    }
  }
  &.ng-leave {
    @include animation-name(fadeAndScaleToBottom);
    @include animation-play-state(paused);
    &.ng-leave-active {
      @include animation-play-state(running);
    }
  }
}

@include keyframes(fadeAndScaleFromBottom) {
  from {
    opacity: 0;
    @include transform(translateY(-30%) scale(0.5));
  }
  to {
    opacity: 1;
  }
}

@include keyframes(fadeAndScaleToBottom) {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    @include transform(translateY(-30%) scale(0.5));
  }
}

$fade-and-rotateX-duration: .3s;
$fade-and-rotateX-timing-function: ease;

.am-perspective-fadeRotateXFromTop {
  @include animation-duration($fade-and-rotateX-duration);
  @include animation-timing-function($fade-and-rotateX-timing-function);
  @include animation-fill-mode(backwards);

  &.am-perspective-fadeRotateX-add,
  &.ng-hide-remove,
  &.ng-move {
    @include animation-name(fadeAndRotateFromTop);
  }

  &.am-perspective-fadeRotateX-remove,
  &.ng-hide {
    @include animation-name(fadeAndRotateFromTop);
  }
  
  &.ng-enter {
    visibility: hidden;
    @include animation-name(fadeAndRotateFromTop);
    @include animation-play-state(paused);
    &.ng-enter-active {
      visibility: visible;
      @include animation-play-state(running);
    }
  }

  &.ng-leave {
    @include animation-name(fadeAndRotateToTop);
    @include animation-play-state(paused);
    &.ng-leave-active {
      @include animation-play-state(running);
    }
  }
}

@include keyframes(fadeAndRotateFromTop){
  from {
    opacity: 0;
    @include transform(perspective(800px) rotateX(30deg) translateY(-30%));
  }
  to {
    opacity: 1;
    @include transform(perspective(800px) rotateX(0) translateY(0));
  }
}

@include keyframes(fadeAndRotateToTop){
  from {
    opacity: 1;
    @include transform(perspective(800px) rotateX(0) translateY(0));
  }
  to {
    opacity: 0;
    @include transform(perspective(800px) rotateX(30deg) translateY(-30%));
  }
}

.am-perspective-fadeRotateXFromBottom {
  @include animation-duration($fade-and-rotateX-duration);
  @include animation-timing-function($fade-and-rotateX-timing-function);
  @include animation-fill-mode(backwards);

  &.am-perspective-fadeRotateX-add,
  &.ng-hide-remove,
  &.ng-move {
    @include animation-name(fadeAndRotateFromBottom);
  }

  &.am-perspective-fadeRotateX-remove,
  &.ng-hide {
    @include animation-name(fadeAndRotateFromBottom);
  }

  &.ng-enter {
    visibility: hidden;
    @include animation-name(fadeAndRotateFromBottom);
    @include animation-play-state(paused);
    &.ng-enter-active {
      visibility: visible;
      @include animation-play-state(running);
    }
  }

  &.ng-leave {
    @include animation-name(fadeAndRotateToBottom);
    @include animation-play-state(paused);
    &.ng-leave-active {
      @include animation-play-state(running);
    }
  }
}

@include keyframes(fadeAndRotateFromBottom){
  from {
    opacity: 0;
    @include transform(perspective(800px) rotateX(-30deg) translateY(-30%));
  }
  to {
    opacity: 1;
    @include transform(perspective(800px) rotateX(0) translateY(0));
  }
}

@include keyframes(fadeAndRotateToBottom){
  from {
    opacity: 1;
    @include transform(perspective(800px) rotateX(0) translateY(0));
  }
  to {
    opacity: 0;
    @include transform(perspective(800px) rotateX(-30deg) translateY(-30%));
  }
}